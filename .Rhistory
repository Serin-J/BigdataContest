seoul_gu_center = read.csv("./data/contest/seoul_gu_center.csv", encoding = "CP949")
# 한국 mapdata에서 서울만 추출
library(sf)
# 한국 mapdata에서 서울만 추출
library(sf)
# 한국 mapdata에서 서울만 추출
library(sf)
# 한국 mapdata에서 서울만 추출
library(sf)
library(maptools)
si_gun_gu = st_read("./sigungu_mapdata/TL_SCCO_SIG.shp",
stringsAsFactors= F)
seoulmap = st_read("./data/contest/seoul.shp", stringsAsFactors = F)
seoulmap = st_read("./data/contest/seoul.shp", stringsAsFactors = F)
st_read("./sigungu_mapdata/TL_SCCO_SIG.shp",
stringsAsFactors= F)
getwd()
##############################################################################
# 여기서부터 돌리면 됨
library(sf)
library(maptools)
library(ggplot2)
library(sp)
library(dplyr)
install.packages(sf)
install.packages("maptools")
final_ddarung
##############################################################################
# 여기서부터 돌리면 됨
library(sf)
library(maptools)
library(ggplot2)
library(sp)
library(dplyr)
seoulmap = st_read("./data/contest/seoul.shp", stringsAsFactors = F)
Encoding(seoulmap$SIG_KOR_NM) = "CP949"
seoul = seoulmap %>% select(SIG_KOR_NM)
seoulmap_sp = as(seoul, "Spatial")
seoulmap_longlat = spTransform(seoulmap_sp,
CRS("+proj=longlat"))
seoullonglat = fortify(seoulmap_longlat)
levels(seoullonglat$group) = seoul$SIG_KOR_NM
seoul_gu_center = read.csv("./data/contest/seoul_gu_center.csv", encoding = "CP949")
getwd()
final_ddarung$설치일자 = as.Date(final_ddarung$설치일자, "%F")
##############################################################################
# 여기서부터 돌리면 됨
library(sf)
library(maptools)
library(ggplot2)
library(sp)
library(dplyr)
library(stringr)
seoulmap = st_read("./data/contest/seoul.shp", stringsAsFactors = F)
Encoding(seoulmap$SIG_KOR_NM) = "CP949"
seoul = seoulmap %>% select(SIG_KOR_NM)
seoulmap_sp = as(seoul, "Spatial")
seoulmap_longlat = spTransform(seoulmap_sp,
CRS("+proj=longlat"))
seoullonglat = fortify(seoulmap_longlat)
levels(seoullonglat$group) = seoul$SIG_KOR_NM
# 서울시 구 이름 표시(돌릴 때는 생략)
{
levels(seoullonglat$group) = seoul$SIG_KOR_NM
mean(seoullonglat$long)
guname = seoul$SIG_KOR_NM
mean_long = aggregate(formula = long~group, data = seoullonglat,
FUN = mean, trim = 0.15)
mean_lat = aggregate(formula = lat~group, data = seoullonglat,
FUN = mean, trim = 0.15)
mean_longlat = merge(mean_long, mean_lat, by_x = group)
mean_longlat[1, 2] = mean_longlat[1, 2] - 0.01
mean_longlat[2, 2] = mean_longlat[2, 2] - 0.015
mean_longlat[4, 2] = mean_longlat[4, 2] + 0.015
mean_longlat[6, 2] = mean_longlat[6, 2] - 0.005
mean_longlat[7, 3] = mean_longlat[7, 3] + 0.006
mean_longlat[8, 2] = mean_longlat[8, 2] + 0.002
mean_longlat[9, 2] = mean_longlat[9, 2] + 0.007
mean_longlat[9, 3] = mean_longlat[9, 3] + 0.01
mean_longlat[10, 3] = mean_longlat[10, 3] + 0.01
mean_longlat[11, 3] = mean_longlat[11, 3] - 0.005
mean_longlat[12, 3] = mean_longlat[12, 3] + 0.008
mean_longlat[13, 2] = mean_longlat[13, 2] - 0.012
mean_longlat[14, 2] = mean_longlat[14, 2] - 0.011
mean_longlat[15, 3] = mean_longlat[15, 3] + 0.008
mean_longlat[16, 2] = mean_longlat[16, 2] + 0.02
mean_longlat[17, 3] = mean_longlat[17, 3] - 0.003
mean_longlat[19, 2] = mean_longlat[19, 2] - 0.01
mean_longlat[19, 3] = mean_longlat[19, 3] - 0.007
mean_longlat[20, 2] = mean_longlat[20, 2] + 0.02
mean_longlat[21, 3] = mean_longlat[21, 3] - 0.01
mean_longlat[23, 3] = mean_longlat[23, 3] + 0.005
mean_longlat[24, 3] = mean_longlat[24, 3] - 0.002
mean_longlat[25, 3] = mean_longlat[25, 3] - 0.011
seoul_gu_center = mean_longlat
seoul_gu_center$group = as.character(seoul_gu_center$group)
?Encoding
?write.csv
write.csv(seoul_gu_center, "./data/contest/seoul_gu_center.csv", fileEncoding = "CP949")
}
# 서울시 구 이름 표시(돌릴 때는 생략)
{
levels(seoullonglat$group) = seoul$SIG_KOR_NM
mean(seoullonglat$long)
guname = seoul$SIG_KOR_NM
mean_long = aggregate(formula = long~group, data = seoullonglat,
FUN = mean, trim = 0.15)
mean_lat = aggregate(formula = lat~group, data = seoullonglat,
FUN = mean, trim = 0.15)
mean_longlat = merge(mean_long, mean_lat, by_x = group)
mean_longlat[1, 2] = mean_longlat[1, 2] - 0.01
mean_longlat[2, 2] = mean_longlat[2, 2] - 0.015
mean_longlat[4, 2] = mean_longlat[4, 2] + 0.015
mean_longlat[6, 2] = mean_longlat[6, 2] - 0.005
mean_longlat[7, 3] = mean_longlat[7, 3] + 0.006
mean_longlat[8, 2] = mean_longlat[8, 2] + 0.002
mean_longlat[9, 2] = mean_longlat[9, 2] + 0.007
mean_longlat[9, 3] = mean_longlat[9, 3] + 0.01
mean_longlat[10, 3] = mean_longlat[10, 3] + 0.01
mean_longlat[11, 3] = mean_longlat[11, 3] - 0.005
mean_longlat[12, 3] = mean_longlat[12, 3] + 0.008
mean_longlat[13, 2] = mean_longlat[13, 2] - 0.012
mean_longlat[14, 2] = mean_longlat[14, 2] - 0.011
mean_longlat[15, 3] = mean_longlat[15, 3] + 0.008
mean_longlat[16, 2] = mean_longlat[16, 2] + 0.02
mean_longlat[17, 3] = mean_longlat[17, 3] - 0.003
mean_longlat[19, 2] = mean_longlat[19, 2] - 0.01
mean_longlat[19, 3] = mean_longlat[19, 3] - 0.007
mean_longlat[20, 2] = mean_longlat[20, 2] + 0.02
mean_longlat[21, 3] = mean_longlat[21, 3] - 0.01
mean_longlat[23, 3] = mean_longlat[23, 3] + 0.005
mean_longlat[24, 3] = mean_longlat[24, 3] - 0.002
mean_longlat[25, 3] = mean_longlat[25, 3] - 0.011
seoul_gu_center = mean_longlat
seoul_gu_center$group = as.character(seoul_gu_center$group)
?Encoding
?write.csv
write.csv(seoul_gu_center, "./data/contest/seoul_gu_center.csv", fileEncoding = "CP949")
}
seoulmap = st_read("./data/contest/seoul.shp", stringsAsFactors = F)
getwd()
